!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("primeng/tabview"),require("@angular/core"),require("ng-jhipster"),require("@ngx-translate/core"),require("@angular/forms")):"function"==typeof define&&define.amd?define("common-library",["exports","@angular/common","primeng/tabview","@angular/core","ng-jhipster","@ngx-translate/core","@angular/forms"],t):t(e["common-library"]={},e.ng.common,e.tabview,e.ng.core,e.ngJhipster,e.core,e.ng.forms)}(this,function(e,t,o,n,a,r,i){"use strict";var l=function(){function e(){}return e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=n.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),s=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:n.Component,args:[{selector:"jhi-common-library",template:"\n    <p>\n      common-library works!\n    </p>\n  "}]}],e.ctorParameters=function(){return[]},e}(),c=function(){function e(e){this.formBuilder=e,this.tabItems=[],this.emailTemplates=[]}return e.prototype.ngOnInit=function(){this.createForm()},e.prototype.changeTemplate=function(e){var t=e.split(","),o=Number(t[0]),n=t[1],a=this.emailTemplates.filter(function(e){return e.templateId===o&&e.locale===n})[0];console.log(a)},e.prototype.createForm=function(){this.emailForm=this.formBuilder.group({locale:"",toList:"",fromAddress:"",ccList:"",bccList:"",subject:"",emailBody:"",onBehalfOf:""})},e.decorators=[{type:n.Component,args:[{selector:"jhi-template-fields",template:'\n    <div class="col-md-12 mt-3 p-0">\n    <p-tabView>\n        <p-tabPanel [header]="tabItems[0]?.header" [selected]="true">\n        <form [formGroup]="emailForm" autocomplete="off">\n            <div id="frm-fields">\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group row mb-1">\n                            <label class="col-sm-1 col-form-label" for="frm-tmplt"\n                                id="lbl-template">{{\'global.form.labels.template\' | translate}}</label>\n                            <div class="col-sm-5">\n                                <select #templateDropdown class="form-control form-control-sm" id="frm-tmplt"\n                                    (change)="changeTemplate(templateDropdown.value)" formControlName="locale">\n                                    <option *ngFor=" let template of emailTemplates"\n                                        [value]="template?.templateId+\',\' +template?.locale"\n                                        [title]="template?.templateName">\n                                        {{template.templateName}}\n                                    </option>\n                                </select>\n                            </div>\n                            <span class="col-cstm-1 pr-0"></span>\n                            <label *ngIf="emailForm.get(\'onBehalfOf\').value" class="col-sm-1 col-form-label pl-0"\n                                for="frm-tmplt" id="lbl-sender">{{\'global.form.labels.sender\' | translate}}</label>\n                            <div *ngIf="emailForm.get(\'onBehalfOf\').value" class="col-sm-4 pl-0 mt-1" id="val-sender">\n                                {{emailForm.get(\'onBehalfOf\').value}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group row mb-1">\n                            <label for="frm-to" class="col-sm-1 col-form-label"\n                                id="lbl-to">{{\'global.form.labels.to\' | translate}}</label>\n                            <div class="col-sm-5">\n                                <input formControlName="toList" type="text" class="form-control form-control-sm"\n                                    id="frm-to">\n                            </div>\n                            <span class="col-cstm-1 icon-info-bg icon_info pr-0">\n                                <span class="tooltipTxt tooltipTop"\n                                    id="lbl-description">{{\'sendEvent.messageDesc\' | translate}}</span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group row mb-1">\n                            <label for="frm-from" class="col-sm-1 col-form-label"\n                                id="lbl-to">{{\'global.form.labels.from\' | translate}}</label>\n                            <div class="col-sm-5">\n                                <input formControlName="fromAddress" type="text" class="form-control form-control-sm"\n                                    id="frm-from">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="form-group row mb-1">\n                            <label for="frm-cc" class="col-sm-1 col-form-label"\n                                id="lbl-cc">{{\'global.form.labels.cc\' | translate}}</label>\n                            <div class="col-sm-5">\n                                <input formControlName="ccList" type="text" class="form-control form-control-sm"\n                                    id="frm-cc">\n                            </div>\n                            <span class="col-cstm-1 pr-0"></span>\n                            <label for="frm-bcc" class="col-sm-1 col-form-label pl-0"\n                                id="lbl-bcc">{{\'global.form.labels.bcc\' | translate}}</label>\n                            <div class="col-sm-4 pl-0">\n                                <input formControlName="bccList" type="text" class="form-control form-control-sm"\n                                    id="frm-bcc">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                </div>\n            </div>\n        </form>\n            <jhi-ck-editor #ckEditor [apiToken]="apiToken" [autoFocus]="autoFocus" [editorValue]="editorData"\n                [editorId]="\'email-editor\'">\n            </jhi-ck-editor>\n        </p-tabPanel>\n        <p-tabPanel [header]="tabItems[1]?.header">\n            Content 2\n        </p-tabPanel>\n        <p-tabPanel [header]="tabItems[2]?.header">\n            Content 3\n        </p-tabPanel>\n</p-tabView>\n</div>',styles:[".icon_info .tooltipTxt{visibility:hidden;width:500px;background-color:#f8f6d7;color:#836a17;text-align:center;padding:8px 0;position:absolute;z-index:1}.tooltipTop{bottom:94%;left:55%;margin-left:-60px}.icon_info:hover .tooltipTxt{visibility:visible}.col-cstm-1{flex:0 0 3%;max-width:3%}.icon_info{height:20px;width:1.5em;background-position:-17px -1629px}.icon-info-bg{background:url(../../../lib/icons/icons.svg) no-repeat;display:inline-block;cursor:pointer}"]}]}],e.ctorParameters=function(){return[{type:i.FormBuilder}]},e.propDecorators={tabItems:[{type:n.Input}],editorData:[{type:n.Input}],autoFocus:[{type:n.Input}],apiToken:[{type:n.Input}],emailTemplates:[{type:n.Input}]},e}(),p={MAIN_COMPONENT:"MAIN_COMPONENT",UPDATE_SESSION_INTERUPT:"UPDATE_SESSION_INTERUPT"},m=function(){function e(e){this.eventManager=e,this.autoFocus=!1,this.editorId="email-editor"}return e.prototype.ngAfterViewInit=function(){this.initCkEditor()},e.prototype.getOffsetHeight=function(){var e=document.querySelector("#send-event #frm-fields"),t=document.querySelector("#send-event #frm-save"),o=document.querySelector("#send-event"),n=e?e.offsetHeight:0,a=t?t.offsetHeight:0,r=o?o.offsetHeight:0;return r&&n&&a?r-n-a-30:0},e.prototype.getEditorData=function(){return this.ckeditorInstance.getData()},e.prototype.onResize=function(e){this.resizeEditor()},e.prototype.initCkEditor=function(){var a=this;this.ckeditorInstance=CKEDITOR.replace(this.editorId,{startupFocus:this.autoFocus,autoParagraph:!1,fillEmptyBlocks:!1,enterMode:CKEDITOR.ENTER_BR,forceEnterMode:!1,ignoreEmptyParagraph:!1,resize_enabled:!1,allowedContent:!0,removePlugins:"elementspath",height:"290px",disableNativeSpellChecker:!1,extraPlugins:"uploadimage",uploadUrl:"api/template/image",filebrowserImageUploadUrl:"api/template/image",fontSize_sizes:"8/8pt;9/9pt;10/10pt;11/11pt;12/12pt;14/14pt;16/16pt;18/18pt;20/20pt;22/22pt;24/24pt;26/26pt;28/28pt;36/36pt;48/48pt;72/72pt",toolbarGroups:this.getToolbarGroups(),removeButtons:this.removeOtherToolbars(),removeDialogTabs:"link:upload;image:Upload;image:Link;image:advanced;table:advanced",image_previewText:" "}),this.ckeditorInstance.on("instanceReady",function(){a.ckeditorInstance.setData(a.editorValue,function(){a.ckeditorInstance.resetUndo()})}),this.ckeditorInstance.on("change",function(e){a.eventManager.broadcast({name:p.MAIN_COMPONENT,content:p.UPDATE_SESSION_INTERUPT})}),this.ckeditorInstance.on("loaded",function(){a.resizeEditor()}),this.ckeditorInstance.on("fileUploadRequest",function(e){var t=e.data.fileLoader,o=new FormData,n=t.xhr;n.open("POST",t.uploadUrl,!0),o.append("file",t.file,t.fileName),a.apiToken&&n.setRequestHeader("Authorization","Bearer "+a.apiToken),n.send(o),e.stop()}),this.ckeditorInstance.on("fileUploadResponse",function(e){e.stop();var t=e.data,o=t.fileLoader.xhr.responseText.split("|");if(o[1])t.message=o[1],e.cancel();else{var n=JSON.parse(o[0]);t.fileName=n.fileName,t.url=n.url}})},e.prototype.getToolbarGroups=function(){return[{name:"document",groups:["selection","mode","document","doctools"]},{name:"clipboard",groups:["clipboard","undo"]},{name:"editing",groups:["find","spellchecker","editing"]},{name:"forms",groups:["forms"]},{name:"insert",groups:["insert"]},{name:"basicstyles",groups:["basicstyles","cleanup"]},{name:"paragraph",groups:["list","indent","blocks","align","bidi","paragraph"]},{name:"links",groups:["links"]},{name:"styles",groups:["styles"]},{name:"colors",groups:["colors"]},{name:"tools",groups:["tools"]},{name:"others",groups:["others"]},{name:"about",groups:["about"]}]},e.prototype.removeOtherToolbars=function(){return"Preview,Source,SelectAll,Cut,Copy,Paste,PasteText,PasteFromWord,Language,Flash,Smiley,SpecialChar,PageBreak,Iframe,Anchor,PasteText,Save,NewPage,Print,Templates,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Scayt,CopyFormatting,RemoveFormat,Maximize,ShowBlocks,About,CreateDiv,Blockquote"},e.prototype.resizeEditor=function(){var e=this.getOffsetHeight();this.ckeditorInstance&&200<e&&this.ckeditorInstance.resize("100%",e)},e.decorators=[{type:n.Component,args:[{selector:"jhi-ck-editor",template:'<div #editorContainer>\n        <textarea name="email-editor" [id]="editorId"></textarea>\n    </div>',encapsulation:n.ViewEncapsulation.None,styles:["a.cke_dialog_ui_button,a.cke_dialog_ui_button_ok,a.cke_dialog_ui_button_ok:active,a.cke_dialog_ui_button_ok:focus,a.cke_dialog_ui_button_ok:hover{color:#fff!important;background:#41acb3!important;border:1px solid #41acb3!important;outline:0!important;padding:4px 1px!important}a.cke_dialog_ui_button_ok:focus{box-shadow:none!important}span.cke_dialog_ui_button{color:#fff!important}.cke_dialog select{-webkit-appearance:menulist-button;-moz-appearance:menulist-button;appearance:menulist-button}.cke_top{background-color:#58b1b1!important}"]}]}],e.ctorParameters=function(){return[{type:a.JhiEventManager}]},e.propDecorators={editorValue:[{type:n.Input}],apiToken:[{type:n.Input}],autoFocus:[{type:n.Input}],editorId:[{type:n.Input}],editorContainer:[{type:n.ViewChild,args:["editorContainer"]}],onResize:[{type:n.HostListener,args:["window:resize",["$event"]]}]},e}(),d=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[s,m,c],imports:[t.CommonModule,o.TabViewModule,r.TranslateModule,i.FormsModule,i.ReactiveFormsModule],exports:[s,m,c],providers:[{provide:a.JhiLanguageService,useClass:a.JhiLanguageService}]}]}],e.ctorParameters=function(){return[]},e}();e.CommonLibraryService=l,e.CommonLibraryComponent=s,e.TemplateFieldsComponent=c,e.CommonLibraryModule=d,e.CUSTOM_EVENTS=p,e.ɵa=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=common-library.umd.min.js.map