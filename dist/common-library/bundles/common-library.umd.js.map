{"version":3,"file":"common-library.umd.js.map","sources":["ng://common-library/lib/common-library.service.ts","ng://common-library/lib/common-library.component.ts","ng://common-library/lib/component/template-fields/template-fields.component.ts","ng://common-library/lib/component/ck-editor/enums.model.ts","ng://common-library/lib/component/ck-editor/ck-editor.component.ts","ng://common-library/lib/common-library.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLibraryService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'jhi-common-library',\n  template: `\n    <p>\n      common-library works!\n    </p>\n  `,\n  styles: []\n})\nexport class CommonLibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @(#)template-fields.component.ts Mar 11, 2020 Copyright 2020,Oversight Systems, Inc. Proprietary and confidential\n * @author adeole\n */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n/**\n * This component class is used to handle event related operations.\n */\n@Component({\n    selector: 'jhi-template-fields',\n    template: `\n    <div class=\"col-md-12 mt-3 p-0\">\n    <p-tabView>\n        <p-tabPanel [header]=\"tabItems[0]?.header\" [selected]=\"true\">\n        <form [formGroup]=\"emailForm\" autocomplete=\"off\">\n            <div id=\"frm-fields\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"form-group row mb-1\">\n                            <label class=\"col-sm-1 col-form-label\" for=\"frm-tmplt\"\n                                id=\"lbl-template\">{{'global.form.labels.template' | translate}}</label>\n                            <div class=\"col-sm-5\">\n                                <select #templateDropdown class=\"form-control form-control-sm\" id=\"frm-tmplt\"\n                                    (change)=\"changeTemplate(templateDropdown.value)\" formControlName=\"locale\">\n                                    <option *ngFor=\" let template of emailTemplates\"\n                                        [value]=\"template?.templateId+',' +template?.locale\"\n                                        [title]=\"template?.templateName\">\n                                        {{template.templateName}}\n                                    </option>\n                                </select>\n                            </div>\n                            <span class=\"col-cstm-1 pr-0\"></span>\n                            <label *ngIf=\"emailForm.get('onBehalfOf').value\" class=\"col-sm-1 col-form-label pl-0\"\n                                for=\"frm-tmplt\" id=\"lbl-sender\">{{'global.form.labels.sender' | translate}}</label>\n                            <div *ngIf=\"emailForm.get('onBehalfOf').value\" class=\"col-sm-4 pl-0 mt-1\" id=\"val-sender\">\n                                {{emailForm.get('onBehalfOf').value}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"form-group row mb-1\">\n                            <label for=\"frm-to\" class=\"col-sm-1 col-form-label\"\n                                id=\"lbl-to\">{{'global.form.labels.to' | translate}}</label>\n                            <div class=\"col-sm-5\">\n                                <input formControlName=\"toList\" type=\"text\" class=\"form-control form-control-sm\"\n                                    id=\"frm-to\">\n                            </div>\n                            <span class=\"col-cstm-1 icon-info-bg icon_info pr-0\">\n                                <span class=\"tooltipTxt tooltipTop\"\n                                    id=\"lbl-description\">{{'sendEvent.messageDesc' | translate}}</span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"form-group row mb-1\">\n                            <label for=\"frm-from\" class=\"col-sm-1 col-form-label\"\n                                id=\"lbl-to\">{{'global.form.labels.from' | translate}}</label>\n                            <div class=\"col-sm-5\">\n                                <input formControlName=\"fromAddress\" type=\"text\" class=\"form-control form-control-sm\"\n                                    id=\"frm-from\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"form-group row mb-1\">\n                            <label for=\"frm-cc\" class=\"col-sm-1 col-form-label\"\n                                id=\"lbl-cc\">{{'global.form.labels.cc' | translate}}</label>\n                            <div class=\"col-sm-5\">\n                                <input formControlName=\"ccList\" type=\"text\" class=\"form-control form-control-sm\"\n                                    id=\"frm-cc\">\n                            </div>\n                            <span class=\"col-cstm-1 pr-0\"></span>\n                            <label for=\"frm-bcc\" class=\"col-sm-1 col-form-label pl-0\"\n                                id=\"lbl-bcc\">{{'global.form.labels.bcc' | translate}}</label>\n                            <div class=\"col-sm-4 pl-0\">\n                                <input formControlName=\"bccList\" type=\"text\" class=\"form-control form-control-sm\"\n                                    id=\"frm-bcc\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                </div>\n            </div>\n        </form>\n            <jhi-ck-editor #ckEditor [apiToken]=\"apiToken\" [autoFocus]=\"autoFocus\" [editorValue]=\"editorData\"\n                [editorId]=\"'email-editor'\">\n            </jhi-ck-editor>\n        </p-tabPanel>\n        <p-tabPanel [header]=\"tabItems[1]?.header\">\n            Content 2\n        </p-tabPanel>\n        <p-tabPanel [header]=\"tabItems[2]?.header\">\n            Content 3\n        </p-tabPanel>\n</p-tabView>\n</div>`,\n    styleUrls: ['./template-field-style.scss']\n})\nexport class TemplateFieldsComponent implements OnInit {\n    @Input() tabItems: any[] = [];\n    @Input() editorData: any;\n    @Input() autoFocus: boolean;\n    @Input() apiToken: string;\n    @Input() emailTemplates: any[] = [];\n    emailForm: FormGroup;\n    constructor(private formBuilder: FormBuilder) {\n\n    }\n    ngOnInit() {\n        this.createForm();\n    }\n\n    /**\n     * To change the Email template\n     *\n     * @param value: string\n     */\n    changeTemplate(value: string) {\n        const idLocaleData = value.split(',');\n        const templateId = Number(idLocaleData[0]);\n        const templateLocale = idLocaleData[1];\n        const selectedTemplate = this.emailTemplates.filter(obj => obj.templateId === templateId && obj.locale === templateLocale)[0];\n        console.log(selectedTemplate);\n    }\n\n    /**\n     * To create a form for Email Template\n     */\n    private createForm() {\n        this.emailForm = this.formBuilder.group({\n            locale: '',\n            toList: '',\n            fromAddress: '',\n            ccList: '',\n            bccList: '',\n            subject: '',\n            emailBody: '',\n            onBehalfOf: ''\n        });\n    }\n}\n","/**\n * @(#)enums.model.ts Mar 13, 2020 Copyright 2020,Oversight Systems, Inc. Proprietary and confidential\n *\n * @author adeole\n */\nexport enum CUSTOM_EVENTS {\n    MAIN_COMPONENT = 'MAIN_COMPONENT',\n    UPDATE_SESSION_INTERUPT = 'UPDATE_SESSION_INTERUPT',\n}\n","/**\n * @(#)ck-editor.component.ts Mar 13, 2020 Copyright 2020, Oversight Systems, Inc. Proprietary and confidential\n */\nimport { AfterViewInit, Component, ElementRef, HostListener, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { JhiEventManager } from 'ng-jhipster';\nimport { CUSTOM_EVENTS } from './enums.model';\ndeclare const CKEDITOR: any;\n\n/**\n * This component class handles the event message template related operations.\n * @author adeole\n */\n@Component({\n    selector: 'jhi-ck-editor',\n    template: `<div #editorContainer>\n        <textarea name=\"email-editor\" [id]=\"editorId\"></textarea>\n    </div>`,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./ck-editor.component.scss']\n})\nexport class CkEditorComponent implements AfterViewInit {\n    ckeditorInstance: any;\n    @Input() editorValue: string;\n    @Input() apiToken: string;\n    @Input() autoFocus = false;\n    @Input() editorId = 'email-editor';\n    @ViewChild('editorContainer') editorContainer: ElementRef<HTMLElement>;\n\n    /**\n     * This constructor inject the services.\n     *\n     * @param wbLocalStorageService WBLocalStorageService\n     * @param sessionStorage SessionStorageService\n     */\n    constructor(\n        private eventManager: JhiEventManager\n    ) { }\n\n    /**\n     * This default life-cycle method initilize the ck-editor.\n     */\n    ngAfterViewInit() {\n        this.initCkEditor();\n    }\n\n    /**\n     * The method is used to get the element height.\n     *\n     * @returns height number\n     */\n    getOffsetHeight() {\n        const defaultPadding = 30;\n        const frmFieldElement = (<HTMLElement>document.querySelector('#send-event #frm-fields'));\n        const frmSaveElement = (<HTMLElement>document.querySelector('#send-event #frm-save'));\n        const sendEventElement = (<HTMLElement>document.querySelector('#send-event'));\n        const frmFieldHeight = frmFieldElement ? frmFieldElement.offsetHeight : 0;\n        const frmSaveHeight = frmSaveElement ? frmSaveElement.offsetHeight : 0;\n        const sendEventHeight = sendEventElement ? sendEventElement.offsetHeight : 0;\n        return sendEventHeight && frmFieldHeight && frmSaveHeight ? sendEventHeight - frmFieldHeight - frmSaveHeight - defaultPadding : 0;\n    }\n\n    /**\n     * The method is used to get the editor data\n     *\n     * @returns editorData any\n     */\n    getEditorData() {\n        return this.ckeditorInstance.getData();\n    }\n\n    /**\n     * This event method is used to handle window resize.\n     */\n    @HostListener('window:resize', ['$event'])\n    onResize(event: any) {\n        this.resizeEditor();\n    }\n\n    /**\n     * To initialise the ckeditor\n     */\n    private initCkEditor() {\n        this.ckeditorInstance = CKEDITOR.replace(this.editorId, {\n            startupFocus: this.autoFocus,\n            autoParagraph: false,\n            fillEmptyBlocks: false,\n            enterMode: CKEDITOR.ENTER_BR,\n            forceEnterMode: false,\n            ignoreEmptyParagraph: false,\n            resize_enabled: false,\n            allowedContent: true,\n            removePlugins: 'elementspath',\n            height: '290px',\n            disableNativeSpellChecker: false,\n            extraPlugins: 'uploadimage',\n            uploadUrl: 'api/template/image',\n            filebrowserImageUploadUrl: 'api/template/image',\n            fontSize_sizes:\n                '8/8pt;9/9pt;10/10pt;11/11pt;12/12pt;14/14pt;16/16pt;18/18pt;20/20pt;22/22pt;24/24pt;26/26pt;28/28pt;36/36pt;48/48pt;72/72pt',\n            toolbarGroups: this.getToolbarGroups(),\n            removeButtons: this.removeOtherToolbars(),\n            removeDialogTabs: 'link:upload;image:Upload;image:Link;image:advanced;table:advanced',\n            image_previewText: ' '\n        });\n\n        this.ckeditorInstance.on('instanceReady', () => {\n            this.ckeditorInstance.setData(this.editorValue, () => {\n                this.ckeditorInstance.resetUndo();\n            });\n        });\n\n        this.ckeditorInstance.on('change', e => {\n            this.eventManager.broadcast({ name: CUSTOM_EVENTS.MAIN_COMPONENT, content: CUSTOM_EVENTS.UPDATE_SESSION_INTERUPT });\n        });\n\n        this.ckeditorInstance.on('loaded', () => {\n            this.resizeEditor();\n        });\n\n        this.ckeditorInstance.on('fileUploadRequest', evt => {\n            const fileLoader = evt.data.fileLoader;\n            const formData = new FormData();\n            const xhr = fileLoader.xhr;\n            xhr.open('POST', fileLoader.uploadUrl, true);\n            formData.append('file', fileLoader.file, fileLoader.fileName);\n            if (this.apiToken) {\n                xhr.setRequestHeader('Authorization', 'Bearer ' + this.apiToken);\n            }\n            xhr.send(formData);\n            evt.stop();\n        });\n\n        this.ckeditorInstance.on('fileUploadResponse', evt => {\n            evt.stop();\n            const data = evt.data,\n                xhr = data.fileLoader.xhr,\n                response = xhr.responseText.split('|');\n\n            if (response[1]) {\n                data.message = response[1];\n                evt.cancel();\n            } else {\n                const responseData = JSON.parse(response[0]);\n                data.fileName = responseData.fileName;\n                data.url = responseData.url;\n            }\n        });\n    }\n\n    /**\n     * Return toolbar group options for the ckeditor\n     */\n    private getToolbarGroups() {\n        return [\n            {\n                name: 'document',\n                groups: ['selection', 'mode', 'document', 'doctools']\n            },\n            {\n                name: 'clipboard',\n                groups: ['clipboard', 'undo']\n            },\n            {\n                name: 'editing',\n                groups: ['find', 'spellchecker', 'editing']\n            },\n            {\n                name: 'forms',\n                groups: ['forms']\n            },\n            {\n                name: 'insert',\n                groups: ['insert']\n            },\n            {\n                name: 'basicstyles',\n                groups: ['basicstyles', 'cleanup']\n            },\n            {\n                name: 'paragraph',\n                groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']\n            },\n            {\n                name: 'links',\n                groups: ['links']\n            },\n            {\n                name: 'styles',\n                groups: ['styles']\n            },\n            {\n                name: 'colors',\n                groups: ['colors']\n            },\n            {\n                name: 'tools',\n                groups: ['tools']\n            },\n            {\n                name: 'others',\n                groups: ['others']\n            },\n            {\n                name: 'about',\n                groups: ['about']\n            }\n        ];\n    }\n\n    /**\n     * return un-used toolbar options to remove it from ckeditor.\n     */\n    private removeOtherToolbars() {\n        return 'Preview,Source,SelectAll,Cut,Copy,Paste,PasteText,PasteFromWord,Language,Flash,Smiley,SpecialChar,PageBreak,Iframe,Anchor,PasteText,Save,NewPage,Print,Templates,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Scayt,CopyFormatting,RemoveFormat,Maximize,ShowBlocks,About,CreateDiv,Blockquote';\n    }\n\n    /**\n     * This method is used to resize the editor height according to window size.\n     */\n    private resizeEditor() {\n        const height = this.getOffsetHeight();\n        if (this.ckeditorInstance && height > 200) {\n            this.ckeditorInstance.resize('100%', height);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TabViewModule } from 'primeng/tabview';\nimport { CommonLibraryComponent } from './common-library.component';\nimport { CkEditorComponent } from './component/ck-editor/ck-editor.component';\nimport { TemplateFieldsComponent } from './component/template-fields/template-fields.component';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [CommonLibraryComponent, CkEditorComponent, TemplateFieldsComponent],\n    imports: [CommonModule, TabViewModule, TranslateModule, FormsModule, ReactiveFormsModule],\n    exports: [CommonLibraryComponent, CkEditorComponent, TemplateFieldsComponent],\n    providers: [{ provide: JhiLanguageService, useClass: JhiLanguageService }]\n})\nexport class CommonLibraryModule {\n    constructor() {\n    }\n}\n"],"names":["Injectable","Component","FormBuilder","Input","ViewEncapsulation","JhiEventManager","ViewChild","HostListener","NgModule","CommonModule","TabViewModule","TranslateModule","FormsModule","ReactiveFormsModule","JhiLanguageService"],"mappings":"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"}
